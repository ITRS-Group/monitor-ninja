<?php


/**
 * Autogenerated class NinjaWidget_Model
 *
 * @todo: documentation
 */
class Ninja_Widget_Model extends BaseNinja_Widget_Model {

	public function __construct($initial = false) {
		parent::__construct();
		$this->set_username($this->get_current_user());

		if($initial !== false) {
			if (array_key_exists ( 'page', $initial ))
				$this->set_page ( $initial ['page'] );

			if (array_key_exists ( 'name', $initial ))
				$this->set_name ( $initial ['name'] );

			if (array_key_exists ( 'username', $initial ))
				$this->set_username ( $initial ['username'] );

			if (array_key_exists ( 'friendly_name', $initial ))
				$this->set_friendly_name ( $initial ['friendly_name'] );

			if (array_key_exists ( 'setting', $initial ))
				$this->set_setting ( $initial ['setting'] );
		}
	}

	public function get_setting() {
		$var = i18n::unserialize(parent::get_setting());
		if(!is_array($var)) {
			return array();
		}
		return $var;
	}

	public function set_setting($value) {
		if (isset($value['title']) && strlen($value['title']) === 0)
			unset($value['title']);
		return parent::set_setting(serialize($value));
	}

	/**
	 * Returns the widgets full qualified identification
	 *
	 * @return string Identification
	 */
	public function get_widget_id () {
		return sprintf('%s-%s',
			$this->get_name(),
			$this->get_instance_id()
		);
	}

	/**
	 * Given a structure like array(placeholder1 => array(widget1, widget2, widgetn), placeholder2 => array(...))
	 * serialize it and save it in the database.
	 */
	public static function set_widget_order($page, $widget_order) {
		$res = array();
		unset($widget_order['unknown']);
		foreach ($widget_order as $key => $ary) {
			$res[] = "$key=".implode(',', $ary);
		}
		return Ninja_setting_Model::save_page_setting('widget_order', $page, implode('|', $res));
	}
}
