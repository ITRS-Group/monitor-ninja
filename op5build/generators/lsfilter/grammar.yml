tokens:
  _whitespace: /^(\s+)/
  _comment:    /^(\/\*(?:[^\*]|\*[^\/])*\*\/)/
  
  string:      /^("(?:[^"\\]|\\.)*")/
  
  and:         /^(and)(?:[^a-z0-9_].*|)$/i
  not:         /^(not)(?:[^a-z0-9_].*|)$/i
  or:          /^(or)(?:[^a-z0-9_].*|)$/i
  in:          /^(in)(?:[^a-z0-9_].*|)$/i
  
  name:        /^([a-z][a-z0-9_]*)/i
  
  integer:     /^([0-9]+)/
  
  not_re_ci:   /^(!~~)/
  not_re_cs:   /^(!~)/
  re_ci:       /^(~~)/
  re_cs:       /^(~)/
  
  not_eq_ci:   /^(!=~)/
  eq_ci:       /^(=~)/
  
  not_gt_eq:   /^(!>=)/
  not_lt_eq:   /^(!<=)/
  not_gt:      /^(!>)/
  not_lt:      /^(!<)/
  not_eq:      /^(!=)/
  gt_eq:       /^(>=)/
  lt_eq:       /^(<=)/
  gt:          /^(>)/
  lt:          /^(<)/
  eq:          /^(=)/
  
  colon:       /^(:)/
  comma:       /^(,)/
  
  op_add:      /^(\+)/
  op_sub:      /^(\-)/
  op_mult:     /^(\*)/
  op_div:      /^(\/)/
  
  par_l:       /^(\()/
  par_r:       /^(\))/
  brace_l:     /^(\[)/
  brace_r:     /^(\])/

rules:
  entry:              [ program,      query, _end ]
  query:              [ query,        _brace_l, table_def, _brace_r, search_query ]
  
  table_def_simple:   [ table_def,    name ]
  table_def_columns:  [ table_def,    name, _colon, column_list ]
  column_list_end:    [ column_list,  name ]
  column_list_cont:   [ column_list,  column_list, _comma, name ]
  
  search_query:       [ search_query, filter ]
  
  filter_or:          [ filter,       filter2, _or, filter ]
  filter_1_2:         [ filter,       filter2 ]
  filter_and:         [ filter2,      filter3, _and, filter2 ]
  filter_2_3:         [ filter2,      filter3 ]
  filter_not:         [ filter3,      _not, filter3 ]
  filter_parentesis:  [ filter3,      _par_l, filter, _par_r ]
  
  filter_in:          [ filter3,      _in, string ]
  filter_field_in:    [ filter3,      name, _in, string ]
  
  filter_not_re_ci:   [ filter3,      name, _not_re_ci, expr ]
  filter_not_re_cs:   [ filter3,      name, _not_re_cs, expr ]
  filter_re_ci:       [ filter3,      name, _re_ci, expr ]
  filter_re_cs:       [ filter3,      name, _re_cs, expr ]
  
  filter_not_eq_ci:   [ filter3,      name, _not_eq_ci, expr ]
  filter_eq_ci:       [ filter3,      name, _eq_ci, expr ]
  
  filter_not_gt_eq:   [ filter3,      name, _not_gt_eq, expr ]
  filter_not_lt_eq:   [ filter3,      name, _not_lt_eq, expr ]
  filter_not_gt:      [ filter3,      name, _not_gt, expr ]
  filter_not_lt:      [ filter3,      name, _not_lt, expr ]
  filter_not_eq:      [ filter3,      name, _not_eq, expr ]
  filter_gt_eq:       [ filter3,      name, _gt_eq, expr ]
  filter_lt_eq:       [ filter3,      name, _lt_eq, expr ]
  filter_gt:          [ filter3,      name, _gt, expr ]
  filter_lt:          [ filter3,      name, _lt, expr ]
  filter_eq:          [ filter3,      name, _eq, expr ]
  
  expr_add:           [ expr,         expr2, _op_add, expr ]
  expr_sub:           [ expr,         expr2, _op_sub, expr ]
  expr_end:           [ expr,         expr2 ]
  
  expr_mult:          [ expr2,        expr3, _op_mult, expr2 ]
  expr_div:           [ expr2,        expr3, _op_div, expr2 ]
  expr_end2:          [ expr2,        expr3 ]
  
  expr_par:           [ expr3,        _par_l, expr, _par_r ]
#  expr_func:          [ expr3,        name, _par_l, expr, _par_r ]
  expr_num:           [ expr3,        integer ]
  expr_name:          [ expr3,        name ]
  
  
    
   