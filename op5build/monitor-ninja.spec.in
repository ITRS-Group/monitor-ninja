Name: monitor-ninja
Version: @@VERSION@@
Release: @@RELEASE@@
License: op5 Software License
Packager: build@op5
Vendor: op5 AB
BuildRoot: /tmp/%name-%version
Summary: op5 monitor ninja
Group: op5/Monitor
Prefix: /opt/monitor/op5/ninja
Requires: monitor-gui-core
Requires: merlin-apps >= 0.8.0
Requires: op5auth >= 1.2.0
Conflicts: monitor-gui-core <= 4.0.7
Source: %name-%version.tar.gz
%description
Webgui for Nagios 3.

%prep
%setup -q

%build
pushd cli-helpers
make
popd
make test docs


%install
rm -rf %buildroot
mkdir -p -m 755 %buildroot%prefix
mkdir -p -m 775 %buildroot%prefix/upload

# copy everything and then remove what we don't want to ship
cp -r * %buildroot%prefix
for d in test op5build monitor-ninja.spec \
	install_old.php php2doxy.sh example.htaccess
do
	rm -rf %buildroot%prefix/$d
done

sed -i 's/\([\t ]const ALLOW_PRODUCTION =\) .*/\1 TRUE;/' \
	%buildroot%prefix/application/controllers/authenticated.php
sed -i \
	-e 's,^\(.config..site_domain.. = .\)/ninja/,\1/monitor/,' \
	-e 's/^\(.config..product_name.. = .\)Nagios/\1op5 Monitor/' \
	-e 's/^\(.config..version_info.. = .\)\/etc\/ninja-release/\1\/etc\/op5-monitor-release/' \
	%buildroot%prefix/application/config/config.php

cp op5build/login.png \
	%buildroot%prefix/application/views/themes/default/css/default/images
cp op5build/favicon.ico \
	%buildroot%prefix/application/views/themes/default/icons/16x16/
cp op5build/icon.png \
	%buildroot%prefix/application/views/themes/default/icons/

find %buildroot -print0 | xargs -0 chmod a+r
find %buildroot -type d -print0 | xargs -0 chmod a+x

mkdir -p %buildroot/etc/cron.d/
install -m 644 install_scripts/scheduled_reports.crontab %buildroot/etc/cron.d/scheduled-reports
install -m 644 install_scripts/recurring_downtime.crontab %buildroot/etc/cron.d/recurring-downtime
sed -i 's/default\/cron/cron\/cron/' %buildroot/etc/cron.d/scheduled-reports

# executables
for f in cli-helpers/apr_md5_validate \
		install_scripts/ninja_db_init.sh; do
	chmod 755 %buildroot%prefix/$f
done

# The custom_widgets dir need to be writable by the apache user
chmod 775 %buildroot%prefix/application/custom_widgets

mkdir -p %buildroot/var/www/html
ln -sfT %prefix %buildroot/var/www/html/monitor
ln -sfT %prefix %buildroot/var/www/html/ninja
# recursive symbolic link, so must be after all 'find' stuff above
ln -s ../ %buildroot%prefix/op5

mkdir -p %buildroot/opt/monitor/op5/nacoma/hooks/save
install -m 755 install_scripts/nacoma_hooks.py %buildroot/opt/monitor/op5/nacoma/hooks/save/ninja_hooks.py

mkdir -p %buildroot%_sysconfdir/httpd/conf.d
install -m 640 op5build/ninja.httpd-conf %buildroot/etc/httpd/conf.d/monitor-ninja.conf

%post
# Verify that mysql-server is installed and running before executing sql scripts
$(mysql -Be "quit" 2>/dev/null)
if [ $? -eq 0 ]; then
  sh %prefix/install_scripts/ninja_db_init.sh
else
  echo "WARNING: mysql-server is not installed or not running."
  echo "If Oracle database is to be used this is ok."
  echo "If MySQL database is to be used you need to maually run:"
  echo "  %prefix/install_scripts/ninja_db_init.sh"
  echo "to complete the setup of %name"
fi

# Set driver to LDAP if ad or ldap is configured
if [ -f /opt/op5sys/etc/ldapserver ]; then
  sed -i "s/^\$config\[\"*'*driver\"*'*\].*/\$config\['driver'\] = 'LDAP';/" %prefix/application/config/auth.php
fi

%files
%defattr(-,monitor,apache)
%prefix
%attr(644,root,root) /etc/cron.d/*
/var/www/html/monitor
/var/www/html/ninja
/opt/monitor/op5/nacoma/hooks/save/ninja_hooks.py*
%attr(-,root,apache) /etc/httpd/conf.d/monitor-ninja.conf

%clean
rm -rf %buildroot

%postun
echo "DELETE FROM ninja_widgets WHERE name='geomap';" | mysql -uroot merlin
