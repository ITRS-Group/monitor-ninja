Name: monitor-ninja
Version: @@VERSION@@
Release: @@RELEASE@@
License: op5 Software License
Packager: build@op5
Vendor: op5 AB
BuildRoot: %{_tmppath}/%{name}-%{version}
Summary: op5 monitor ninja
Group: op5/monitor
Prefix: /opt/monitor/op5/ninja
Requires: monitor-gui-core
Requires: merlin-apps >= 0.8.0
Requires: merlin
Requires: php >= 5.3
Requires: php-op5lib >= 1.1.0
Requires: wkhtmltopdf
Requires: op5-monitor-supported-database
Requires: monitor-livestatus
BuildRequires: php-op5lib >= 1.1.0-beta3
BuildRequires: php >= 5.3
BuildRequires: rubygem(compass)
BuildRequires: doxygen
BuildRequires: graphviz
BuildRequires: merlin monitor-merlin op5-nagios
BuildRequires: merlin-apps
BuildRequires: op5-monitor-supported-database
BuildRequires: monitor-livestatus
%if 0%{?rhel} >= 6 || 0%{?rhel_version} >=600 || 0%{?centos_version} >=600
Requires: php-process
BuildRequires: php-process
%else
Requires: php-json
%endif

Source: %name-%version.tar.gz
%description
Webgui for Nagios.

%package test
Summary: Test files for ninja
Group: op5/Monitor
Requires: monitor-ninja = %version

%description test
Additional test files for ninja

%prep
%setup -q

%build
pushd cli-helpers
make
popd
make
make docs test


%install
rm -rf %buildroot
mkdir -p -m 755 %buildroot%prefix
mkdir -p -m 775 %buildroot%prefix/upload
mkdir -p -m 775 %buildroot%prefix/application/logs

# copy everything and then remove what we don't want to ship
cp -r * %buildroot%prefix
for d in op5build monitor-ninja.spec \
	php2doxy.sh example.htaccess
do
	rm -rf %buildroot%prefix/$d
done

sed -i "s/\(IN_PRODUCTION', \)FALSE/\1TRUE/" \
	%buildroot%prefix/index.php
sed -i \
	-e 's,^\(.config..site_domain.. = .\)/ninja/,\1/monitor/,' \
	-e 's/^\(.config..product_name.. = .\)Nagios/\1op5 Monitor/' \
	-e 's/^\(.config..version_info.. = .\)\/etc\/ninja-release/\1\/etc\/op5-monitor-release/' \
	%buildroot%prefix/application/config/config.php

cp op5build/login.png \
	%buildroot%prefix/application/views/css/default/images
cp op5build/favicon.ico \
	%buildroot%prefix/application/views/icons/16x16/
cp op5build/icon.png \
	%buildroot%prefix/application/views/icons/

find %buildroot -print0 | xargs -0 chmod a+r
find %buildroot -type d -print0 | xargs -0 chmod a+x

mkdir -p %buildroot/etc/cron.d/
install -m 644 install_scripts/scheduled_reports.crontab %buildroot/etc/cron.d/scheduled-reports
install -m 644 install_scripts/recurring_downtime.crontab %buildroot/etc/cron.d/recurring-downtime

# executables
for f in cli-helpers/apr_md5_validate \
		install_scripts/ninja_db_init.sh; do
	chmod 755 %buildroot%prefix/$f
done

# The custom_widgets dir need to be writable by the apache user
chmod 775 %buildroot%prefix/application/custom_widgets

mkdir -p %buildroot/opt/monitor/op5/nacoma/hooks/save
install -m 755 install_scripts/nacoma_hooks.py %buildroot/opt/monitor/op5/nacoma/hooks/save/ninja_hooks.py

mkdir -p %buildroot%_sysconfdir/httpd/conf.d
install -m 640 op5build/ninja.httpd-conf %buildroot/etc/httpd/conf.d/monitor-ninja.conf

# we don't need the git directories
rm -rf %buildroot%prefix/application/vendor/phptap/.git

sed -i 's/Ninja/op5 Monitor/' %buildroot%prefix/application/media/report_footer.html


%pre
# This needs to be removed for us to be able to upgrade ninja 2.0.7
# for some reason.
if test -d %buildroot%prefix/application/vendor/phptap/.git; then
	rm -rf %buildroot%prefix/application/vendor/phptap/.git
fi


%post
# Verify that mysql-server is installed and running before executing sql scripts
$(mysql -Be "quit" 2>/dev/null)
if [ $? -eq 0 ]; then
  sh %prefix/install_scripts/ninja_db_init.sh
else
  echo "WARNING: mysql-server is not installed or not running."
  echo "If Oracle database is to be used this is ok."
  echo "If MySQL database is to be used you need to maually run:"
  echo "  %prefix/install_scripts/ninja_db_init.sh"
  echo "to complete the setup of %name"
fi

$(php %prefix/index.php cli/save_widget --page 'tac/index' --name nagvis --friendly_name "Nagvis" &> /dev/null)
$(php %prefix/index.php cli/save_widget --page 'tac/index' --name listview --friendly_name "List view" &> /dev/null)
if [ "$?" -ne 0 ]; then
	echo "WARNING: mysql-server is not installed or not running."
	echo "If Oracle database is to be used this is ok."
	echo "If MySQL database is to be used you need to maually"
	echo "setup the merlin database to complete the setup of %name"
fi

# Cleanup symlinks we don't use anymore
for link in /var/www/html/monitor /var/www/html/ninja /op5/monitor/op5/ninja/op5 /opt/monitor/op5/ninja/css /opt/monitor/op5/ninja/js /opt/monitor/op5/ninja/images /opt/monitor/op5/ninja/stylesheets
do
	if [ -f $link ]; then
		rm -f $link
	fi
done

%files
%defattr(-,monitor,apache)
%prefix
%attr(644,root,root) /etc/cron.d/*
/opt/monitor/op5/nacoma/hooks/save/ninja_hooks.py*
%attr(-,root,apache) /etc/httpd/conf.d/monitor-ninja.conf
%exclude %prefix/test
%exclude %prefix/modules/test
%exclude %prefix/Makefile

%files test
%defattr(-,monitor,apache)
%prefix/test
%prefix/modules/test
%prefix/Makefile

%clean
rm -rf %buildroot
